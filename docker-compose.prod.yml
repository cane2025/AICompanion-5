version: '3.8'

services:
  app:
    build: .
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://ungdoms_user:secure_password@db:5432/ungdoms
      - SESSION_SECRET=your_very_long_random_session_secret_here
      - JWT_SECRET=your_very_long_random_jwt_secret_here
      - CORS_ORIGIN=https://your-domain.com
      - LOG_LEVEL=info
      - ENABLE_AUDIT_LOGS=true
      - STORAGE_PATH=/var/lib/ungdoms-oppenvard/data
      - BACKUP_PATH=/var/lib/ungdoms-oppenvard/backups
    depends_on:
      - db
    volumes:
      - app-data:/var/lib/ungdoms-oppenvard/data
      - backup-data:/var/lib/ungdoms-oppenvard/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=ungdoms
      - POSTGRES_USER=ungdoms_user
      - POSTGRES_PASSWORD=secure_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ungdoms_user -d ungdoms"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  app-data:
    driver: local
  backup-data:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local

networks:
  default:
    name: ungdoms-network
